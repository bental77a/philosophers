


/*
    1.set 0
    2.pars input
    3.init_table
        ->init_mutex for (for each fork,write,death,meal)
        ->init_philos (id, left fork , right fork, meals_eaten, last_meal_time,table)
    4.simultion
        -> create threads for each philosophers
        -> create monitor thread

        !!! routine
        philo_routine: main loop for each philosopher thread
        Even id philos start late (delayed) to avoid deadlocks
        then : Loop until hta imot chi wahd ðŸ™‚
            Eat (take forks with mutex + locks update meal info + tel9 forks)
               Sleep (print status, sleep) 
               Think (print status)
        Uses mutexes to protect fork access in a safe way        
*/